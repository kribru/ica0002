- name: Install mysql
  apt: 
    name: mysql-server
    state: latest

- name: override.cnf to database server
  template:
    src: override.cnf
    dest: /etc/mysql/mysql.conf.d/override.cnf
  notify:
  - restart mysql

- name: Start service mysql
  ansible.builtin.service:
    name: mysql
    state: started
    enabled: yes

- name: Install PyMySQL
  apt:
    name: python3-pymysql
    state: latest

- name: MySQL database
  community.mysql.mysql_db:
    name: "{{ mysql_database }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock

- name: MySQL user
  community.mysql.mysql_user:
    name: "{{ mysql_user }}"
    password: "{{ mysql_password }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
    host: "%"
    priv: "{{ mysql_database }}.*:ALL"

- name: Create user exporter
  community.mysql.mysql_user:
    name: "{{ mysql_user_exporter }}"
    password: "{{mysql_exporter_pass}}"
    priv:
      '*.*': 'PROCESS,REPLICATION CLIENT,SELECT'
    login_unix_socket: /var/run/mysqld/mysqld.sock

- name: Create MySQL user replication
  community.mysql.mysql_user:
    name: "{{ mysql_user_replication}}"
    password: "{{ mysql_replication_pass }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
    host: "%"
    priv: "*.*:REPLICATION SLAVE"

- name: MySQL replica read only mode ON
  community.mysql.mysql_variables:
    variable: read_only
    value: '{{ "OFF" if inventory_hostname == dns_cname_records["mysql1"] else "ON" }}'
    mode: persist
    login_unix_socket: /var/run/mysqld/mysqld.sock
  notify:
    - Reset MySQL source
    - Reset MySQL replica
    - restart mysql
